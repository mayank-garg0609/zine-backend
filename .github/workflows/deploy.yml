name: Deploy Spring Boot App

on:
  push:
    branches:
      - "test"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Load Firebase Service file
      env:
        DATA: ${{ secrets.FIREBASE_ADMIN_JSON }}
      run: echo "$DATA" > src/main/resources/zine-firebase-admin.json

    - name: Build Docker image
      run: docker build -t ${{ secrets.DOCKERHUB_USERNAME2 }}/zine-backend-test:latest .

    - name: Log in to Docker Hub
      run: echo ${{ secrets.DOCKERHUB_PASSWORD2 }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME2 }} --password-stdin

    - name: Push Docker image
      run: docker push ${{ secrets.DOCKERHUB_USERNAME2 }}/zine-backend-test:latest

    - name: Deploy to EC2 (Test)
      env:
        PRIVATE_KEY: ${{ secrets.EC2_TEST_KEY }}
        HOSTNAME: ${{ secrets.EC2_TEST_HOST }}
        USER_NAME: ${{ secrets.EC2_TEST_USER }}
        ENV_TEST_FILE: ${{ secrets.ENV_TEST }}
      run: |
        echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
        echo "$ENV_TEST_FILE" > env.test
        
        scp -i private_key -o StrictHostKeyChecking=no env.test ${USER_NAME}@${HOSTNAME}:~/env.test

        # Deploy
        ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} << 'EOF'
        sudo docker pull ${{ secrets.DOCKERHUB_USERNAME2 }}/zine-backend-test:latest
        sudo docker stop zine-backend-test || true
        sudo docker rm zine-backend-test || true
        sudo docker run -d --env-file env.test --name zine-backend-test -p 3000:8080 ${{ secrets.DOCKERHUB_USERNAME2 }}/zine-backend-test:latest
        EOF

